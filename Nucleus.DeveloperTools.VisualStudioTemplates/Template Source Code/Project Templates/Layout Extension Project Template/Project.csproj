<Project Sdk="Microsoft.NET.Sdk.Razor">
  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
		<ProduceReferenceAssembly>false</ProduceReferenceAssembly>
		<DisableFastUpToDateCheck>True</DisableFastUpToDateCheck>
		<EnableDefaultContentItems>false</EnableDefaultContentItems>
		<AddRazorSupportForMvc>true</AddRazorSupportForMvc>
    <AssemblyName>$nucleus.extension.namespace$</AssemblyName>
    
    <!-- 
      Set RazorCompileOnBuild to true if you want your views to be compiled into your assembly (improves first-time view performance). .cshtml files 
      do not need to be included in package.xml or in the install zip when RazorCompileOnBuild=true.  Set RazorCompileOnBuild to false 
      if you want your views to be compiled at run time.  When RazorCompileOnBuild=false, .cshtml files must be included in package.xml and in your 
      install zip.
      
      For layout/container projects, we default this setting to false because it is common to use run-time compilation and include .cshtml files in the 
      install set so that end users can make changes to layouts and containers.
      
      If you change this setting to true, you will need to add your project assembly to package.xml
    -->
    <RazorCompileOnBuild>false</RazorCompileOnBuild>

    <!-- 
      Set GenerateEmbeddedFilesManifest to true to generate an embedded files manifest.  If you set this and also set your static resources (css/js) Build
      Action to "Embedded resource" they are embedded in your assembly, and do not need to be  included in package.xml and in your install zip.  To
      use GenerateEmbeddedFilesManifest, you must also include a PackageReference to Microsoft.Extensions.FileProviders.Embedded. 
      If you prefer to include your static resource files in the install set, set their Build Action to "Content" and include them in package.xml.  You can 
      leave GenerateEmbeddedFilesManifest set to true and use a combination of build actions for different files if you want to.
    -->
    <GenerateEmbeddedFilesManifest>false</GenerateEmbeddedFilesManifest>
  </PropertyGroup>

	<ItemGroup>
		<FrameworkReference Include="Microsoft.AspNetCore.App" />
	</ItemGroup>

  <ItemGroup>
		<None Remove="**\*.vspscc" />
		<None Remove="**\*.scc" />
		<None Remove="*.zip" />
	</ItemGroup>

  <ItemGroup>
    <Content Include="**\*.css" />
    <Content Include="**\*.js" />
    <Content Include="**\*.cshtml" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="package.xml" />
    <Content Include="readme.txt" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="package.xml" />
    <Content Include="readme.txt" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="Inventua.Nucleus.Abstractions" Version="3.0.0.0" />
    <PackageReference Include="Inventua.Nucleus.ViewFeatures" Version="3.0.0.0" />
  </ItemGroup>

	<PropertyGroup Label="Nucleus">
		<ExtensionFolder>$nucleus.extension.name$</ExtensionFolder>
		<Version>1.0.0</Version>
		<NUCLEUS_PATH>$([MSBuild]::EnsureTrailingSlash('$(NUCLEUS_PATH)'))</NUCLEUS_PATH>
    <CopyToDefaultSetup>false</CopyToDefaultSetup>
	</PropertyGroup>

	<Import Label="ModulePostBuild" Project="$(NUCLEUS_PATH)module.build.targets" Condition="Exists('$(NUCLEUS_PATH)module.build.targets')" />
</Project>
